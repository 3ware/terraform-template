name: Generate terraform docs
on:
  workflow_call:
    inputs:
      terraform-dir:
        type: string
        required: true

# Declare default permissions as read only.
permissions:
  contents: read

jobs:
  get-temp-token:
    if: github.actor != '3ware-release[bot]'
    uses: 3ware/workflows/.github/workflows/get-workflow-token.yaml@ec67f76d4016824ab0c5e80194d9b17a2eae0d73 # v1.13.0
    secrets: inherit

  terraform-docs:
    needs: [get-temp-token]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    concurrency:
      group: ${{ github.workflow }}-${{ inputs.terraform-dir }}
      cancel-in-progress: true
    # only run this workflow if not triggered by 3ware-release
    # this prevents workflow loop
    if: github.actor != '3ware-release[bot]'
    env:
      WORKING_DIR: ${{ inputs.terraform-dir }}
      TF_DOCS_FILE: README.md

    steps:
      - name: Checkout repository
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          persist-credentials: false

      - name: Decrypt the installation access token
        id: decrypt-token
        run: |
          DECRYPTED_TOKEN=$(gpg --decrypt --quiet --batch --passphrase "$KEY" \
          --output - <(echo "${{ needs.get-temp-token.outputs.temp-token }}" \
          | base64 --decode))
          echo "::add-mask::$DECRYPTED_TOKEN"
          echo "temp-token=$DECRYPTED_TOKEN" >> "$GITHUB_OUTPUT"
        env:
          KEY: ${{ secrets.PGP_SECRET_SIGNING_PASSPHRASE }}

      - name: Render terraform docs
        id: terraform-docs
        uses: terraform-docs/gh-actions@7a62208a0090636af2df1b739da46d27fd90bdc6 # v1.1.0
        with:
          working-dir: ${{ inputs.terraform-dir }}
          output-file: ${{ env.TF_DOCS_FILE }}
          output-method: inject

      - name: Set file path environment variable
        if: ${{ steps.terraform-docs.outputs.num_changed != 0 }}
        run: |
          echo "Number of files changed = ${{ steps.terraform-docs.outputs.num_changed }}"
          echo "FILE_PATH=${{ env.WORKING_DIR }}/${{ env.TF_DOCS_FILE }}" >> $GITHUB_ENV

      # Use the REST API to commit changes, so we get automatic commit signing
      # Only run this job if the file has changed to prevent empty commits
      - name: Push changes back to PR with signature
        id: push-with-sig
        if: ${{ steps.terraform-docs.outputs.num_changed != 0 }}
        env:
          GH_TOKEN: ${{ steps.decrypt-token.outputs.temp-token }}
          DESTINATION_BRANCH: ${{ github.event.pull_request.head.ref }}
          COMMIT_SCOPE: $(awk -F"/" '{print $NF}' <<< ${{ inputs.terraform-dir }})
          FILE_TO_COMMIT: "${{ env.FILE_PATH }}"
        run: |
          export MESSAGE="docs(${{ env.COMMIT_SCOPE }}): Update README.md"
          export SHA=$( git rev-parse $DESTINATION_BRANCH:$FILE_TO_COMMIT )
          export CONTENT=$( base64 -i $FILE_TO_COMMIT )
          gh api --method PUT /repos/:owner/:repo/contents/$FILE_TO_COMMIT \
            --field message="$MESSAGE" \
            --field content="$CONTENT" \
            --field encoding="base64" \
            --field branch="$DESTINATION_BRANCH" \
            --field sha="$SHA"

      - name: Summary if skipped
        if: ${{ steps.push-with-sig.conclusion == 'skipped' }}
        run: |
          echo "### Push Skipped" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Changes were not made to ${{ env.FILE_PATH }} on this run" >> $GITHUB_STEP_SUMMARY

      - name: Summary if successful
        if: ${{ steps.push-with-sig.conclusion == 'success' }}
        env:
          BRANCH: ${{ github.head_ref  }}
        run: |
          echo "### Terraform Docs updated :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $$GITHUB_STEP_SUMMARY
          echo "${{ env.FILE_PATH }} added to $BRANCH" >> $GITHUB_STEP_SUMMARY
          echo "[#${{ github.event.pull_request.number }}](https://github.com/3ware/workflows/pull/${{ github.event.pull_request.number }})" >> $GITHUB_STEP_SUMMARY
