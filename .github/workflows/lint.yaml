name: Lint
on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]
  workflow_call:
    secrets:
      TFC_API_TOKEN:
        required: false

# Disable permissions for all available scopes
permissions: {}

jobs:
  find-terraform:
    permissions:
      contents: read
    uses: ./.github/workflows/get-terraform-dir.yaml

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write # not required (see slack) but produces an error in the logs
      # https://trunkcommunity.slack.com/archives/C04GAE5EA5S/p1677846825881319?thread_ts=1676214812.584879&cid=C04GAE5EA5S
    timeout-minutes: 10
    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref }}
      cancel-in-progress: true
    needs: [find-terraform]
    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          persist-credentials: true # lint fails to authenticate when false

      - name: Setup tfswitch
        if: ${{ needs.find-terraform.outputs.terraform-dir != '' }}
        uses: stv-io/action-tfswitch@b6c5e07f48a6de1934acf5e9c67bd3b21423e9e1 # v1.0.0

      - name: Get Terraform Version
        id: terraform-version
        if: ${{ needs.find-terraform.outputs.terraform-dir != '' }}
        run: |
          tfswitch --chdir=${{ needs.find-terraform.outputs.terraform-dir }}
          echo "VERSION=echo $(terraform --version) | awk '{print substr($2, 2)}'" >> "$GITHUB_OUTPUT"

      - name: Setup Terraform
        if: ${{ needs.find-terraform.outputs.terraform-dir != '' }}
        uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: ${{ steps.terraform-version.outputs.VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_API_TOKEN }}

      # Initialise terraform in the directory where terraform file have changed.
      - name: Initialise Terraform
        if: ${{ needs.find-terraform.outputs.terraform-dir != ''}}
        working-directory: ${{ needs.find-terraform.outputs.terraform-dir }}
        run: terraform init

      - name: Lint with trunk
        if: ${{ always() }} # Run anyway, even if no terraform
        uses: trunk-io/trunk-action@e5f1a3f123a2440f9cd28e036495a1c1f2a20568 # v1.1.1
